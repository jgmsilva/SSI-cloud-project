# Remove packages with known security issues
os_security_packages_clean: true
os_security_packages_list:
  [xinetd, inetd, ypserv, telnet-server, rsh-server, prelink]

# Set to `false` to disable "chmod 700" of home folders for regular users
os_chmod_rootuser_home_folder: true
os_chmod_home_folders: true
# Specify user accounts, whose home folders shouldn't be chmodded to 700 when "os_chmod_home_folders" is enabled.
os_ignore_home_folder_users: []

# Set the SELinux state, which can be either disabled, permissive, or enforcing.
os_selinux_state: enforcing
# Set the SELinux polixy.
os_selinux_policy: default

#----------SSHD HARDENING------------
# true if IPv6 is needed
network_ipv6_enable: true # sshd + ssh
ssh_server_config_file: /etc/ssh/sshd_config # sshd

ssh_permit_root_login: "no"
# ports on which ssh-server should listen
ssh_server_ports: ["22"] # sshd

# one or more ip addresses, to which ssh-server should listen to.
# Default is empty, but should be configured for security reasons!
ssh_listen_to: [0.0.0.0] # sshd

# Host RSA key size in bits
ssh_host_rsa_key_size: 4096 # sshd

# Host certificates to look for when starting sshd.
ssh_host_certificates: [] # sshd

# Specifies the host key algorithms that the server offers
ssh_host_key_algorithms: [] # sshd

ssh_login_grace_time: 30s

ssh_server_permit_environment_vars: "no"
ssh_server_accept_env_vars: ""

ssh_server_password_login: false # sshd

# list of hashes (containing user and rules) to generate Match User blocks for
ssh_server_match_user: false # sshd

# list of hashes (containing group and rules) to generate Match Group blocks for
ssh_server_match_group: false # sshd

# list of hashes (containing addresses/subnets and rules) to generate Match Address blocks for
ssh_server_match_address: false # sshd

# list of hashes (containing port and rules) to generate Match LocalPort blocks for
ssh_server_match_local_port: false # sshd

# maximum number of concurrent unauthenticated connections to the SSH daemon
ssh_max_startups: 10:30:60 # sshd
# Specifies the maximum number of authentication attempts permitted per connection.
# Once the number of failures reaches half this value, additional failures are logged.
ssh_max_auth_retries: 2

# Specifies the maximum number of open sessions permitted from a given connection
ssh_max_sessions: 10

ssh_pubkey_authentication: true

# specify AuthenticationMethods
sshd_authenticationmethods: publickey

# if specified, login is disallowed for user names that match one of the patterns.
ssh_deny_users: "" # sshd

# if specified, login is allowed only for user names that match one of the patterns.
ssh_allow_users: "" # sshd

# if specified, login is disallowed for users whose primary group or supplementary group list matches one of the patterns.
ssh_deny_groups: "" # sshd

# if specified, login is allowed only for users whose primary group or supplementary group list matches one of the patterns.
ssh_allow_groups: "" # sshd

# change default file that contains the public keys that can be used for user authentication.
ssh_authorized_keys_file: "" # sshd

# specifies the file containing trusted certificate authorities public keys used to sign user certificates.
ssh_trusted_user_ca_keys_file: "" # sshd

# set the trusted certificate authorities public keys used to sign user certificates.
# Example:
# ssh_trusted_user_ca_keys:
#   - 'ssh-rsa ... comment1'
#   - 'ssh-rsa ... comment2'
ssh_trusted_user_ca_keys: [] # sshd

# specifies the file containing principals that are allowed. Only used if ssh_trusted_user_ca_keys_file is set.
# Example:
# ssh_authorized_principals_file: '/etc/ssh/auth_principals/%u'
#
# %h is replaced by the home directory of the user being authenticated, and %u is
# replaced by the username of that user. After expansion, the path is taken to be
# an absolute path or one relative to the user's home directory.
#
ssh_authorized_principals_file: "" # sshd

# list of hashes containing file paths and authorized principals. Only used if ssh_authorized_principals_file is set.
# Example:
# ssh_authorized_principals:
#   - { path: '/etc/ssh/auth_principals/root', principals: [ 'root' ], owner: "{{ ssh_owner }}",
#       group: "{{ ssh_group }}", directoryowner: "{{ ssh_owner }}", directorygroup: "{{ ssh_group}}" }
#   - { path: '/etc/ssh/auth_principals/myuser', principals: [ 'masteradmin', 'webserver' ] }
ssh_authorized_principals: [] # sshd

# false to disable printing of the MOTD
ssh_print_motd: false # sshd
ssh_print_pam_motd: false # sshd

# false to disable display of last login information
ssh_print_last_log: false # sshd

# false to disable serving ssh warning banner before authentication is allowed
ssh_banner: false # sshd

# path to file with ssh warning banner
ssh_banner_path: /etc/ssh/banner.txt

# false to disable distribution version leakage during initial protocol handshake
ssh_print_debian_banner: false # sshd (Debian OS family only)

# false to disable sftp configuration
sftp_enabled: true

# false to disable sftp chroot
sftp_chroot: true

# sftp default umask
sftp_umask: "0027"

# change default sftp chroot location
sftp_chroot_dir: /home/%u

# disable ChallengeResponseAuthentication
ssh_challengeresponseauthentication: false

sshd_strict_modes: true

# Logging
sshd_syslog_facility: AUTH
sshd_log_level: VERBOSE
#-----------------------------------
