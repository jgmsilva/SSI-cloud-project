---
- name: Install selinux dependencies when selinux is installed
  become: true
  ansible.builtin.apt:
    name: "{{ ssh_selinux_packages }}"
    state: present
    # update_cache: true

- name: Configure selinux | selinux-01
  become: true
  ansible.posix.selinux:
    policy: "{{ os_selinux_policy }}"
    state: "{{ os_selinux_state }}" # noqa args - see https://github.com/ansible/ansible-lint/issues/2930

- name: Enable SELinux kernel parameters
  become: true
  blockinfile:
    path: /etc/default/grub
    marker: "# {mark} ANSIBLE MANAGED SELINUX"
    block: |
      GRUB_CMDLINE_LINUX="security=selinux selinux=1"

- name: Update GRUB configuration
  become: true
  command: update-grub
  when: ansible_facts['os_family'] == 'Debian'

- name: Reboot the system
  ansible.builtin.reboot:
    msg: "Rebooting to apply SELinux changes"
    reboot_timeout: 300
  become: true

- name: Activate SELinux
  become: true
  ansible.builtin.command:
    cmd: selinux-activate

- name: Reboot the system
  become: true
  ansible.builtin.reboot:
    msg: "Rebooting to relabel files - SELinux changes"
    reboot_timeout: 300

- name: Set SELinux enforcing
  become: true
  ansible.builtin.command:
    cmd: selinux-config-enforcing

- name: Reboot the system
  become: true
  ansible.builtin.reboot:
    msg: "Rebooting to enforce- SELinux changes"
    reboot_timeout: 200

- name: Check SELinux status
  become: true
  ansible.builtin.command:
    cmd: getenforce
  register: selinux_status

- name: Verify SELinux is enforcing
  ansible.builtin.fail:
    msg: "SELinux is not enforcing!"
  when: selinux_status.stdout != "Enforcing"

- name: Authorize the following ports for selinux - {{ ssh_server_ports }}
  become: true
  community.general.seport:
    ports: "{{ item }}"
    proto: tcp
    setype: ssh_port_t
    state: present
  loop: "{{ ssh_server_ports }}"

- name: Check if ssh_password module is already installed
  ansible.builtin.shell: set -o pipefail && semodule -l | grep ssh_password
  args:
    executable: /bin/bash
  register: ssh_password_module
  failed_when: false
  changed_when: false
  check_mode: false
